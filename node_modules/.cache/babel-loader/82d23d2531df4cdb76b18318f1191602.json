{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trabajo\\\\Desktop\\\\tontos\\\\src\\\\components\\\\slider\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport './slider.css';\nimport './thumb.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Slider(_ref) {\n  _s();\n\n  let {\n    percentage = 0,\n    onChange\n  } = _ref;\n  const [position, setPosition] = useState(0);\n  const [marginLeft, setMarginLeft] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState(0);\n  const rangeRef = useRef();\n  const thumbRef = useRef();\n  useEffect(() => {\n    const rangeWidth = rangeRef.current.getBoundingClientRect().width;\n    const thumbWidth = thumbRef.current.getBoundingClientRect().width;\n    const centerThumb = thumbWidth / 100 * percentage * -1;\n    const centerProgressBar = thumbWidth + rangeWidth / 100 * percentage - thumbWidth / 100 * percentage;\n    setPosition(percentage);\n    setMarginLeft(centerThumb);\n    setProgressBarWidth(centerProgressBar);\n  }, [percentage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-cover\",\n      style: {\n        width: `${progressBarWidth}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumb\",\n      ref: thumbRef,\n      style: {\n        left: `${position}%`,\n        marginLeft: `${marginLeft}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      value: position,\n      ref: rangeRef,\n      step: \"0.01\",\n      className: \"range\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"Py6d0w+GJL4/xZyrJMTP0SnoVI4=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useState","useRef","useEffect","Slider","percentage","onChange","position","setPosition","marginLeft","setMarginLeft","progressBarWidth","setProgressBarWidth","rangeRef","thumbRef","rangeWidth","current","getBoundingClientRect","width","thumbWidth","centerThumb","centerProgressBar","left"],"sources":["C:/Users/Trabajo/Desktop/tontos/src/components/slider/Slider.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\nimport './slider.css'\nimport './thumb.css'\n\nfunction Slider({ percentage = 0, onChange }) {\n  const [position, setPosition] = useState(0)\n  const [marginLeft, setMarginLeft] = useState(0)\n  const [progressBarWidth, setProgressBarWidth] = useState(0)\n\n  const rangeRef = useRef()\n  const thumbRef = useRef()\n\n  useEffect(() => {\n    const rangeWidth = rangeRef.current.getBoundingClientRect().width\n    const thumbWidth = thumbRef.current.getBoundingClientRect().width\n    const centerThumb = (thumbWidth / 100) * percentage * -1\n    const centerProgressBar =\n      thumbWidth + (rangeWidth / 100) * percentage - (thumbWidth / 100) * percentage\n    setPosition(percentage)\n    setMarginLeft(centerThumb)\n    setProgressBarWidth(centerProgressBar)\n  }, [percentage])\n\n  return (\n    <div className='slider-container'>\n      <div\n        className='progress-bar-cover'\n        style={{\n          width: `${progressBarWidth}px`\n        }}\n      ></div>\n      <div\n        className='thumb'\n        ref={thumbRef}\n        style={{\n          left: `${position}%`,\n          marginLeft: `${marginLeft}px`\n        }}\n      ></div>\n      <input\n        type='range'\n        value={position}\n        ref={rangeRef}\n        step='0.01'\n        className='range'\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default Slider\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,cAAP;AACA,OAAO,aAAP;;;AAEA,SAASC,MAAT,OAA8C;EAAA;;EAAA,IAA9B;IAAEC,UAAU,GAAG,CAAf;IAAkBC;EAAlB,CAA8B;EAC5C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,CAAD,CAAxD;EAEA,MAAMY,QAAQ,GAAGX,MAAM,EAAvB;EACA,MAAMY,QAAQ,GAAGZ,MAAM,EAAvB;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D;IACA,MAAMC,UAAU,GAAGL,QAAQ,CAACE,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D;IACA,MAAME,WAAW,GAAID,UAAU,GAAG,GAAd,GAAqBd,UAArB,GAAkC,CAAC,CAAvD;IACA,MAAMgB,iBAAiB,GACrBF,UAAU,GAAIJ,UAAU,GAAG,GAAd,GAAqBV,UAAlC,GAAgDc,UAAU,GAAG,GAAd,GAAqBd,UADtE;IAEAG,WAAW,CAACH,UAAD,CAAX;IACAK,aAAa,CAACU,WAAD,CAAb;IACAR,mBAAmB,CAACS,iBAAD,CAAnB;EACD,CATQ,EASN,CAAChB,UAAD,CATM,CAAT;EAWA,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAA,wBACE;MACE,SAAS,EAAC,oBADZ;MAEE,KAAK,EAAE;QACLa,KAAK,EAAG,GAAEP,gBAAiB;MADtB;IAFT;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MACE,SAAS,EAAC,OADZ;MAEE,GAAG,EAAEG,QAFP;MAGE,KAAK,EAAE;QACLQ,IAAI,EAAG,GAAEf,QAAS,GADb;QAELE,UAAU,EAAG,GAAEA,UAAW;MAFrB;IAHT;MAAA;MAAA;MAAA;IAAA,QAPF,eAeE;MACE,IAAI,EAAC,OADP;MAEE,KAAK,EAAEF,QAFT;MAGE,GAAG,EAAEM,QAHP;MAIE,IAAI,EAAC,MAJP;MAKE,SAAS,EAAC,OALZ;MAME,QAAQ,EAAEP;IANZ;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GA7CQF,M;;KAAAA,M;AA+CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}